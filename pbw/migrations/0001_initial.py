# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-09-13 13:13


from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [

    ]

    operations = [
        migrations.CreateModel(
            name='Accuracy',
            fields=[
                ('acckey', models.AutoField(db_column='accKey', primary_key=True, serialize=False)),
                ('accuracyname', models.CharField(db_column='accuracyName', max_length=100)),
            ],
            options={
                'db_table': 'Accuracy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Activityfactoid',
            fields=[
                ('factoidkey', models.IntegerField(db_column='factoidKey', primary_key=True, serialize=False)),
                ('sourcedate', models.TextField(blank=True, db_column='sourceDate', null=True)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('sourcedateol', models.TextField(blank=True, db_column='SourceDateOL', null=True)),
                ('tstanp', models.DateTimeField()),
            ],
            options={
                'db_table': 'ActivityFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attrdatetype',
            fields=[
                ('attrdtkey', models.IntegerField(db_column='attrDTKey', primary_key=True, serialize=False)),
                ('adtname', models.CharField(db_column='aDTName', max_length=20)),
            ],
            options={
                'db_table': 'AttrDateType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('auditkey', models.SmallIntegerField(db_column='auditKey', primary_key=True, serialize=False)),
                ('colldbkey', models.IntegerField(db_column='CollDBKey')),
                ('factoidtypekey', models.SmallIntegerField(db_column='factoidTypeKey')),
                ('dcdcount', models.SmallIntegerField(db_column='DCDCount')),
                ('mdbcount', models.SmallIntegerField(db_column='MDBcount')),
                ('personcount', models.SmallIntegerField(db_column='personCount')),
                ('subcount', models.SmallIntegerField(db_column='subCount')),
                ('problem', models.IntegerField()),
            ],
            options={
                'db_table': 'Audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bibliography',
            fields=[
                ('bibkey', models.IntegerField(db_column='bibKey', primary_key=True, serialize=False)),
                ('latinbib', models.TextField(blank=True, db_column='latinBib', null=True)),
                ('greekbib', models.TextField(blank=True, db_column='greekBib', null=True)),
                ('reference', models.TextField(blank=True, null=True)),
                ('date', models.SmallIntegerField()),
                ('red', models.IntegerField()),
                ('shortname', models.TextField(blank=True, db_column='shortName', null=True)),
            ],
            options={
                'db_table': 'Bibliography',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boulloterion',
            fields=[
                ('boulloterionkey', models.IntegerField(db_column='boulloterionKey', primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('origltext', models.TextField(blank=True, db_column='origLText', null=True)),
                ('olangkey', models.TextField(blank=True, db_column='oLangKey', null=True)),
                ('obvicon', models.TextField(blank=True, db_column='obvIcon', null=True)),
                ('revicon', models.TextField(blank=True, db_column='revIcon', null=True)),
                ('diameter', models.TextField(blank=True, null=True)),
                ('datewords', models.TextField(blank=True, db_column='dateWords', null=True)),
                ('obvtypekey', models.IntegerField(db_column='obvTypeKey')),
                ('revtypekey', models.CharField(db_column='revTypeKey', max_length=100)),
                ('scdatekey', models.IntegerField(db_column='scDateKey')),
                ('hasimage', models.IntegerField(blank=True, db_column='hasImage', null=True)),
            ],
            options={
                'db_table': 'Boulloterion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boulloterionfigure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boulloterionfigurekey', models.IntegerField(db_column='boulloterionFigureKey')),
                ('boulloterionkey', models.IntegerField(db_column='boulloterionKey')),
                ('figurekey', models.IntegerField(db_column='figureKey')),
            ],
            options={
                'db_table': 'BoulloterionFigure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chronitem',
            fields=[
                ('chronitemkey', models.SmallIntegerField(db_column='chronItemKey', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('parent', models.SmallIntegerField(blank=True, null=True)),
                ('chronorder', models.SmallIntegerField(blank=True, db_column='chronOrder', null=True)),
                ('lft', models.SmallIntegerField()),
                ('rgt', models.SmallIntegerField()),
                ('chrontreekey', models.SmallIntegerField(blank=True, db_column='chronTreeKey', null=True)),
                ('year', models.SmallIntegerField(blank=True, null=True)),
                ('datingelement', models.CharField(blank=True, db_column='datingElement', max_length=100, null=True)),
            ],
            options={
                'db_table': 'ChronItem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chronitemfactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factoidkey', models.SmallIntegerField(blank=True, db_column='factoidKey', null=True)),
                ('chronitemkey', models.SmallIntegerField(blank=True, db_column='ChronItemKey', null=True)),
                ('chronorder', models.SmallIntegerField(blank=True, db_column='chronOrder', null=True)),
            ],
            options={
                'db_table': 'ChronItemFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chronsource',
            fields=[
                ('chronsourcekey', models.SmallIntegerField(db_column='chronSourceKey', primary_key=True, serialize=False)),
                ('sourceref', models.CharField(blank=True, db_column='sourceRef', max_length=100, null=True)),
                ('chronitemkey', models.SmallIntegerField(blank=True, db_column='chronItemKey', null=True)),
                ('sourcekey', models.SmallIntegerField(blank=True, db_column='sourceKey', null=True)),
                ('datetypekey', models.SmallIntegerField(blank=True, db_column='dateTypeKey', null=True)),
            ],
            options={
                'db_table': 'ChronSource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chrontree',
            fields=[
                ('chrontreekey', models.SmallIntegerField(db_column='chronTreeKey', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ChronTree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Colldb',
            fields=[
                ('colldbkey', models.SmallIntegerField(db_column='collDBKey', primary_key=True, serialize=False)),
                ('colldbid', models.CharField(db_column='collDBID', max_length=200)),
                ('researcher', models.CharField(max_length=50)),
                ('corrector', models.CharField(max_length=50)),
                ('cdbcreationdate', models.DateTimeField(blank=True, db_column='cdbCreationDate', null=True)),
                ('cdbimportdate', models.DateTimeField(blank=True, db_column='cdbImportDate', null=True)),
                ('sourcekey', models.SmallIntegerField(db_column='sourceKey')),
                ('notes', models.TextField()),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'CollDB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectionkey', models.IntegerField(db_column='collectionKey')),
                ('collectionname', models.TextField(db_column='collectionName')),
                ('red', models.IntegerField()),
                ('shortname', models.TextField(db_column='shortName')),
                ('suppress', models.IntegerField()),
            ],
            options={
                'db_table': 'Collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('countrykey', models.AutoField(db_column='countryKey', primary_key=True, serialize=False)),
                ('countryname', models.TextField(db_column='countryName')),
            ],
            options={
                'db_table': 'Country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cursus',
            fields=[
                ('cursuskey', models.AutoField(db_column='cursusKey', primary_key=True, serialize=False)),
                ('personkey', models.IntegerField(db_column='personKey')),
                ('scdatekey', models.IntegerField(db_column='scDateKey')),
                ('cursusorder', models.SmallIntegerField(db_column='cursusOrder')),
            ],
            options={
                'db_table': 'Cursus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datetypes',
            fields=[
                ('datetypekey', models.SmallIntegerField(db_column='dateTypeKey', primary_key=True, serialize=False)),
                ('datetype', models.CharField(blank=True, db_column='dateType', max_length=200, null=True)),
            ],
            options={
                'db_table': 'DateTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deathfactoid',
            fields=[
                ('factoidkey', models.IntegerField(db_column='factoidKey', primary_key=True, serialize=False)),
                ('sourcedate', models.TextField(blank=True, db_column='sourceDate', null=True)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('sourcedateol', models.TextField(blank=True, db_column='SourceDateOL', null=True)),
                ('tstamp', models.DateTimeField(db_column='tStamp')),
            ],
            options={
                'db_table': 'DeathFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dignityfactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stdname', models.CharField(db_column='stdName', max_length=100)),
                ('dotkey', models.IntegerField(db_column='dotKey')),
                ('tstamp', models.DateTimeField()),
                ('cursusorder', models.SmallIntegerField(db_column='cursusOrder')),
                ('appointedby', models.TextField(blank=True, db_column='AppointedBy', null=True)),
            ],
            options={
                'db_table': 'DignityFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dignityoffice',
            fields=[
                ('id', models.SmallIntegerField(db_column='doKey', primary_key=True, serialize=False)),
                ('stdname', models.CharField(db_column='stdName', max_length=100)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('stdnameol', models.CharField(db_column='stdNameOL', max_length=100)),
                ('stdshortol', models.CharField(db_column='stdShortOL', max_length=50)),
                ('dotkey', models.IntegerField(db_column='dotKey')),
                ('lft', models.SmallIntegerField()),
                ('rgt', models.SmallIntegerField()),
                ('parentkey', models.SmallIntegerField(db_column='parentKey')),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'DignityOffice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dignityofficetype',
            fields=[
                ('dotkey', models.IntegerField(db_column='dotKey', primary_key=True, serialize=False)),
                ('dotname', models.CharField(db_column='dotName', max_length=20)),
            ],
            options={
                'db_table': 'DignityOfficeType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dvsqlauth',
            fields=[
                ('authkey', models.AutoField(db_column='authKey', primary_key=True, serialize=False)),
                ('tablekey', models.SmallIntegerField(db_column='tableKey')),
                ('keyvalue', models.IntegerField(db_column='keyValue')),
                ('namevalue', models.CharField(db_column='nameValue', max_length=50)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'DvSqlAuth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dvsqlindex',
            fields=[
                ('indexkey', models.AutoField(db_column='indexKey', primary_key=True, serialize=False)),
                ('tablekey', models.SmallIntegerField(db_column='tableKey')),
                ('indexname', models.CharField(db_column='indexName', max_length=100)),
                ('isunique', models.IntegerField(db_column='isUnique')),
                ('notes', models.TextField(blank=True, null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'DvSqlIndex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dvsqlindxattr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexkey', models.IntegerField(db_column='indexKey')),
                ('attrkey', models.IntegerField(db_column='attrKey')),
                ('len', models.SmallIntegerField(blank=True, null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'DvSqlIndxAttr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.SmallIntegerField(db_column='ethnicityKey', primary_key=True, serialize=False)),
                ('ethname', models.CharField(db_column='ethName', max_length=100)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('ethnameol', models.CharField(db_column='ethNameOL', max_length=100)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'Ethnicity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ethnicityfactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isdoubtful', models.IntegerField(db_column='isDoubtful')),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'EthnicityFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factoid',
            fields=[
                ('id', models.AutoField(db_column='factoidKey', primary_key=True, serialize=False)),
                ('sourceref', models.CharField(db_column='sourceRef', max_length=250)),
                ('engdesc', models.TextField(db_column='engDesc')),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('origldesc', models.TextField(db_column='origLDesc')),
                ('needsattn', models.IntegerField(db_column='needsAttn')),
                ('notes', models.TextField()),
                ('colldbkey', models.SmallIntegerField(db_column='collDBKey')),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('boulloterionkey', models.CharField(db_column='boulloterionKey', max_length=100)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'Factoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factoidcursus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cursuskey', models.IntegerField(db_column='cursusKey')),
                ('factoidkey', models.IntegerField(db_column='factoidKey')),
            ],
            options={
                'db_table': 'FactoidCursus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factoidlocation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('srcname', models.CharField(db_column='srcName', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('siginfo', models.TextField(db_column='sigInfo')),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'FactoidLocation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factoidperson',
            fields=[
                ('id', models.AutoField(db_column='fpKey', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'FactoidPerson',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factoidpersontype',
            fields=[
                ('fptypekey', models.AutoField(db_column='fpTypeKey', primary_key=True, serialize=False)),
                ('fptypename', models.CharField(db_column='fpTypeName', max_length=15)),
            ],
            options={
                'db_table': 'FactoidPersonType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factoidtype',
            fields=[
                ('id', models.AutoField(db_column='factoidTypeKey', primary_key=True, serialize=False)),
                ('typename', models.CharField(db_column='typeName', max_length=20)),
            ],
            options={
                'db_table': 'FactoidType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Familyname',
            fields=[
                ('famnamekey', models.SmallIntegerField(db_column='famNameKey', primary_key=True, serialize=False)),
                ('famname', models.CharField(db_column='famName', max_length=40)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('famnameol', models.CharField(db_column='famNameOL', max_length=40)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'FamilyName',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Famnamefactoid',
            fields=[
                ('factoidkey', models.IntegerField(db_column='factoidKey', primary_key=True, serialize=False)),
                ('famnamekey', models.SmallIntegerField(db_column='famNameKey')),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'FamNameFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Figure',
            fields=[
                ('figurekey', models.IntegerField(db_column='figureKey', primary_key=True, serialize=False)),
                ('figurename', models.TextField(db_column='figureName')),
            ],
            options={
                'db_table': 'Figure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Found',
            fields=[
                ('foundkey', models.AutoField(db_column='foundKey', primary_key=True, serialize=False)),
                ('founddesc', models.TextField(blank=True, db_column='foundDesc', null=True)),
                ('countrykey', models.IntegerField(blank=True, db_column='countryKey', null=True)),
                ('boulloterionkey', models.IntegerField(blank=True, db_column='boulloterionKey', null=True)),
                ('bibkey', models.TextField(blank=True, db_column='bibKey', null=True)),
                ('bibref', models.TextField(blank=True, db_column='bibRef', null=True)),
            ],
            options={
                'db_table': 'Found',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hierarchyunit',
            fields=[
                ('hierarchyunitid', models.AutoField(db_column='hierarchyUnitID', primary_key=True, serialize=False)),
                ('narrativeunitid', models.IntegerField(db_column='narrativeUnitID')),
                ('lft', models.IntegerField()),
                ('rgt', models.IntegerField()),
                ('parentid', models.IntegerField(blank=True, db_column='parentID', null=True)),
                ('chronorder', models.IntegerField(db_column='Chronorder')),
                ('treeid', models.IntegerField(blank=True, db_column='treeID', null=True)),
            ],
            options={
                'db_table': 'HierarchyUnit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kinfactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'KinFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kinshiptype',
            fields=[
                ('id', models.SmallIntegerField(db_column='kinKey', primary_key=True, serialize=False)),
                ('gspecrelat', models.CharField(db_column='gspecRelat', max_length=30)),
                ('gunspecrelat', models.CharField(db_column='gunspecRelat', max_length=30)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'KinshipType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Langfactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'LangFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Languageskill',
            fields=[
                ('langkey', models.SmallIntegerField(db_column='langKey', primary_key=True, serialize=False)),
                ('languagename', models.CharField(db_column='languageName', max_length=100)),
            ],
            options={
                'db_table': 'LanguageSkill',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(db_column='locationKey', primary_key=True, serialize=False)),
                ('locname', models.CharField(db_column='locName', max_length=100)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('locnameol', models.CharField(blank=True, db_column='locNameOL', max_length=100, null=True)),
                ('extrainfo', models.CharField(blank=True, db_column='extraInfo', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'Location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locationselector',
            fields=[
                ('locselkey', models.SmallIntegerField(db_column='locSelKey', primary_key=True, serialize=False)),
                ('locationkey', models.IntegerField(db_column='locationKey')),
                ('locselname', models.CharField(db_column='locSelName', max_length=100)),
            ],
            options={
                'db_table': 'LocationSelector',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Narrativefactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factoidkey', models.IntegerField(db_column='factoidKey')),
                ('narrativeunitid', models.IntegerField(db_column='narrativeUnitID')),
                ('hide', models.IntegerField()),
                ('chronorder', models.SmallIntegerField(blank=True, db_column='chronOrder', null=True)),
                ('fmkey', models.IntegerField(db_column='fmKey')),
            ],
            options={
                'db_table': 'NarrativeFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Narrativeunit',
            fields=[
                ('narrativeunitid', models.AutoField(db_column='narrativeUnitID', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('primaryattestation', models.CharField(blank=True, db_column='primaryAttestation', max_length=200, null=True)),
                ('secondaryattestation', models.CharField(blank=True, db_column='secondaryAttestation', max_length=200, null=True)),
                ('dates', models.CharField(blank=True, max_length=200, null=True)),
                ('datetypekey', models.IntegerField(blank=True, db_column='dateTypeKey', null=True)),
                ('summary', models.TextField()),
                ('fmkey', models.IntegerField(db_column='fmKey')),
                ('notes', models.TextField(blank=True, null=True)),
                ('number', models.IntegerField()),
                ('year', models.IntegerField()),
                ('reign', models.IntegerField()),
                ('event', models.IntegerField()),
                ('problem', models.IntegerField()),
                ('heading', models.IntegerField()),
            ],
            options={
                'db_table': 'NarrativeUnit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('occupationkey', models.SmallIntegerField(db_column='occupationKey', primary_key=True, serialize=False)),
                ('occupationname', models.CharField(db_column='occupationName', max_length=50)),
            ],
            options={
                'db_table': 'Occupation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Occupationfactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'OccupationFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Origlangauth',
            fields=[
                ('olangkey', models.AutoField(db_column='oLangKey', primary_key=True, serialize=False)),
                ('olanguage', models.CharField(blank=True, db_column='oLanguage', max_length=20, null=True)),
            ],
            options={
                'db_table': 'OrigLangAuth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(db_column='personKey', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('mdbcode', models.IntegerField(db_column='mdbCode')),
                ('descname', models.CharField(db_column='descName', max_length=100)),
                ('floruit', models.CharField(max_length=15)),
                ('firstdate', models.SmallIntegerField(db_column='firstDate')),
                ('firstdatetype', models.IntegerField(db_column='firstDateType')),
                ('lastdate', models.SmallIntegerField(db_column='lastDate')),
                ('lastdatetype', models.IntegerField(db_column='lastDateType')),
                ('nameol', models.CharField(db_column='nameOL', max_length=100)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('bibliography', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField(db_column='tstamp')),
            ],
            options={
                'ordering': ['name', 'mdbcode'],
                'db_table': 'Person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Personcolldb',
            fields=[
                ('personcolldbkey', models.AutoField(db_column='personCollDBKey', primary_key=True, serialize=False)),
                ('personkey', models.IntegerField(db_column='personKey')),
                ('colldbkey', models.SmallIntegerField(db_column='collDBKey')),
                ('cdbcode', models.SmallIntegerField(db_column='cdbCode')),
                ('name', models.CharField(max_length=30)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('nameol', models.CharField(db_column='nameOL', max_length=60)),
                ('notes', models.TextField()),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'PersonCollDB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Possessionfactoid',
            fields=[
                ('factoidkey', models.IntegerField(db_column='factoidKey', primary_key=True, serialize=False)),
                ('possessionname', models.CharField(db_column='possessionName', max_length=100)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'PossessionFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Published',
            fields=[
                ('publishedkey', models.IntegerField(db_column='publishedKey', primary_key=True, serialize=False)),
                ('bibkey', models.IntegerField(db_column='bibKey')),
                ('publicationref', models.CharField(db_column='publicationRef', max_length=50)),
                ('publicationpage', models.CharField(db_column='publicationPage', max_length=50)),
                ('publishedorder', models.IntegerField(db_column='publishedOrder')),
                ('boulloterionkey', models.IntegerField(db_column='boulloterionKey')),
            ],
            options={
                'db_table': 'Published',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('religionkey', models.AutoField(db_column='religionKey', primary_key=True, serialize=False)),
                ('religionname', models.CharField(db_column='religionName', max_length=100)),
            ],
            options={
                'db_table': 'Religion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Religionfactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ReligionFactoid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scdate',
            fields=[
                ('scdatekey', models.AutoField(db_column='scDateKey', primary_key=True, serialize=False)),
                ('factoidkey', models.IntegerField(db_column='factoidKey')),
                ('ssourcekey', models.IntegerField(db_column='sSourceKey')),
                ('year', models.SmallIntegerField()),
                ('yrorder', models.SmallIntegerField(db_column='yrOrder')),
                ('ssref', models.TextField(db_column='ssRef')),
                ('priority', models.IntegerField()),
                ('notes', models.TextField()),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
                ('acckey', models.IntegerField(db_column='accKey')),
                ('yeargivenform', models.CharField(blank=True, db_column='yearGivenForm', max_length=25, null=True)),
            ],
            options={
                'db_table': 'ScDate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scsource',
            fields=[
                ('ssourcekey', models.AutoField(db_column='sSourceKey', primary_key=True, serialize=False)),
                ('ssourceid', models.CharField(db_column='sSourceID', max_length=50)),
                ('ssourcefullref', models.TextField(db_column='sSourceFullRef')),
                ('notes', models.TextField()),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'ScSource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seal',
            fields=[
                ('sealkey', models.IntegerField(db_column='sealKey', primary_key=True, serialize=False)),
                ('collectionkey', models.IntegerField(db_column='collectionKey')),
                ('collectionref', models.IntegerField(db_column='collectionRef')),
                ('sealorder', models.IntegerField(db_column='sealOrder')),
                ('boulloterionkey', models.IntegerField(db_column='boulloterionKey')),
            ],
            options={
                'db_table': 'Seal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sexauth',
            fields=[
                ('id', models.AutoField(db_column='sexKey', primary_key=True, serialize=False)),
                ('sexvalue', models.CharField(db_column='sexValue', max_length=25)),
            ],
            options={
                'db_table': 'SexAuth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.SmallIntegerField(db_column='sourceKey', primary_key=True, serialize=False)),
                ('sourceid', models.CharField(db_column='sourceID', max_length=50)),
                ('sourcebib', models.TextField(db_column='sourceBib')),
            ],
            options={
                'db_table': 'Source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('typekey', models.IntegerField(db_column='typeKey', primary_key=True, serialize=False)),
                ('typename', models.TextField(db_column='typeName')),
            ],
            options={
                'db_table': 'Type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userkey', models.AutoField(db_column='userKey', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='userName', max_length=20)),
                ('namedisplay', models.CharField(db_column='nameDisplay', max_length=100)),
                ('passwd', models.CharField(max_length=100)),
                ('initials', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Variantname',
            fields=[
                ('vnamekey', models.AutoField(db_column='vnameKey', primary_key=True, serialize=False)),
                ('olangkey', models.IntegerField(db_column='oLangKey')),
                ('name', models.CharField(max_length=50)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('tstamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'VariantName',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vnamefactoid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'VNameFactoid',
                'managed': False,
            },
        ),
    ]
