name: 'pbw_openstack'

services:

  # Required - Nginx Ingress
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  nginx:
    build:
      context: ..
      dockerfile: ./compose/nginx/Dockerfile
    restart: unless-stopped
    expose:
      - "8001"
    volumes:
      - ../volumes/django/static:/usr/share/nginx/static:ro
    environment:
      VIRTUAL_HOST: "pbw-os.kdl.kcl.ac.uk,pbw.app.cch.kcl.ac.uk,localhost,127.0.0.1"
      VIRTUAL_PATH: "~^/(static/|redist/|robots.txt)"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8001


  db:
    image: mysql:5
    container_name: pbw_db
    volumes:
      - ../volumes/local_mysql_data:/var/lib/mysql
    restart: unless-stopped
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: mysql --user=root --password=$$MYSQL_ROOT_PASSWORD -e 'SHOW DATABASES;'
      timeout: 10s
      interval: 5s
      retries: 10
    env_file:
      - .env

  elasticsearch:
    image: elasticsearch:7.10.1
    #    volumes:
    #      - ../volumes/elastic_data:/usr/share/elasticsearch/data
    env_file:
      - .env
    expose:
      - "9200"
      - "9300"
    #    ports:
    #      - "9200:9200"
    restart: unless-stopped

  # Core config at /opt/solr/server/solr/mycores/pbw/conf
  #  solr:
  #    image: solr:8.0
  #    container_name: pbw_solr
  #    restart: unless-stopped
  #    expose:
  #      - "8983"
  ##    volumes:
  ##      - local_solr_data:/var/solr
  #    command:
  #      - solr-precreate
  #      - pbw

  # Remember to copy the schema! (Not automatic at present)
  # To build:
  # docker-compose -f local.yml run --rm web python manage.py build_solr_schema --configure-directory=/app/solr_config/config
  # then docker cp results to solr folder above
  #  pbw:
  #    container_name: pbw_liv
  #    build:
  #      context: ../
  #      dockerfile: ./compose/local/django/Dockerfile
  #    command: /start
  #    #restart: unless-stopped
  ##    volumes:
  ##      - .:/app:z
  #    ports:
  #      - "8000:8000"
  #    depends_on:
  #      db:
  #        condition: service_healthy
  #    environment:
  #      VIRTUAL_HOST: "pbw.kdl.kcl.ac.uk,localhost"
  #      LETSENCRYPT_HOST: "pbw.kdl.kcl.ac.uk,localhost"
  #      VIRTUAL_PROTO: http
  #      VIRTUAL_PORT: 8000

  django:
    build:
      context: ../
      dockerfile: ./compose/django/Dockerfile
    command: /start
    container_name: openstack_pbw_django
    volumes:
      - ../volumes/django/static:/app/static
    depends_on:
      - db
      - elasticsearch
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      VIRTUAL_HOST: "pbw-os.kdl.kcl.ac.uk,pbw.app.cch.kcl.ac.uk,localhost,127.0.0.1"
      VIRTUAL_PATH: "/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000



